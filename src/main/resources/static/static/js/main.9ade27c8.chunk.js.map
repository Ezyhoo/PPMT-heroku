{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTTokens.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/UserManagement/Login.js","components/UserManagement/Register.js","components/Layout/Landing.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","style","width","projectIdentifier","projectName","description","to","onClick","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","href","Dashboard","getProjects","projects","projectNum","length","role","projectsArr","count","key","state","get","res","setJWTToken","token","console","log","defaults","headers","common","createNewUser","newUser","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","start_date","end_date","errors","classnames","placeholder","initialState","project_tasks","project_taks","combineReducers","action","filter","backlog","project_task","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updatedProject","getProject","match","params","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","map","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","boardContent","message","boardAlgorithm","AddProjectTask","newTask","dueDate","addProjectTask","UpdateProjectTask","updatedProjectTask","create_At","updateProjectTask","getProjectTask","then","Object","entries","constructor","put","Login","loginRequest","username","password","login","getDerivedStateFromProps","setItem","decoded","jwt_decode","Register","confirmPassword","fullname","color","JSON","stringify","Landing","icon","class","isLoginActive","rightSide","classList","add","remove","prevState","current","currentActive","ref","containerRef","changeState","bind","LeftSide","loginIcon","registerIcon","component","otherProps","render","App","jwtToken","getItem","decoded_jwtToken","currentTime","Date","now","exp","setToken","exact","path","updateProject","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ade27c8.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n \r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    \r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch =>{\r\n    if(window.confirm(\"Are you sure to delete the project and all the data related to it?\")){\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\" style={{ width: 506 }}>\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"col-20\">\r\n            <span className=\"mx-auto mb-2\">{`ID: ${project.projectIdentifier}`}</span>\r\n          </div>\r\n          <div className=\"col-lg-20 col-md-20 col-20\">\r\n            <h3>{`Name：${project.projectName}`}</h3>\r\n            <p>{`Description: ${project.description}`}</p>\r\n          </div>\r\n          <div className=\"col-md-40 d-lg-block\">\r\n            <div className=\"d-flex flex-wrap\">\r\n              <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                <div className=\"card card-body bg-light board\">\r\n                  <i className=\"fa fa-flag-checkered pr-1 text-center\">\r\n                    <br />\r\n                    Project Board{\" \"}\r\n                  </i>\r\n                </div>\r\n              </Link>\r\n              <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                <div className=\"card card-body bg-light update\">\r\n                  <i className=\"fa fa-edit pr-1 text-center\">\r\n                    <br />\r\n                    Update Project\r\n                  </i>\r\n                </div>\r\n              </Link>\r\n              <div\r\n                className=\"card card-body bg-light delete\"\r\n                onClick={() => this.onDeleteClick(project.projectIdentifier)}\r\n              >\r\n                <i className=\"fa fa-minus-circle pr-1 text-center\">\r\n                  <br />\r\n                  Delete Project\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link\r\n        to=\"/addProject\"\r\n        href=\"ProjectForm.html\"\r\n        className=\"btn btn-lg btn-primary\"\r\n      >\r\n      <i className=\"fas fa-plus-square mr-2\"></i>\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const projects = this.props.project.projects;\r\n    //console.log(projects.length);\r\n    var projectNum = projects.length;\r\n    const RenderProjects = () => {\r\n      if (projects.length === 0) {\r\n        return (\r\n          <div className=\"alert alert-primary text-center\" role=\"alert\">\r\n            You do not have any project. Click \"Create Project\" to create your\r\n            first project\r\n          </div>\r\n        );\r\n      } else {\r\n        let projectsArr = [];\r\n        let count = 0;\r\n        while (projectNum > 0) {\r\n          if (projectNum > 1) {\r\n            projectsArr.push(\r\n              <div className=\"row\" key={count}>\r\n                <ProjectItem className=\"float-left\" project={projects[count++]} />\r\n                <ProjectItem className=\"float-right\" project={projects[count++]} />\r\n              </div>\r\n            );\r\n            projectNum -= 2;\r\n          } else {\r\n            projectsArr.push(<ProjectItem key={count} project={projects[count++]} />);\r\n            projectNum--;\r\n          }\r\n\r\n        }\r\n        //console.log(projectsArr);\r\n        return projectsArr;\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects Dashboard</h1>\r\n              <br />\r\n              <CreateProjectButton/>\r\n\r\n              <br />\r\n              <hr />\r\n              <RenderProjects/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        console.log(true);\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }else{\r\n        console.log(false);\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTTokens\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = newUser => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    //console.log(err);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n\r\n    // extract token from res.data\r\n    const {token} = res.data;\r\n\r\n    // store the token in the localstorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // set the token in the header ***\r\n    setJWTToken(token);\r\n\r\n    // decode the token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\")\r\n  setJWTToken(false)\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout = () => {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  };\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              <i className=\"far fa-clipboard mr-1\"></i>Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/\" onClick={this.logout}>\r\n              <i className=\"fas fa-sign-out-alt mr-1\"></i>Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n              Welcome to the Personal Project Management Tool\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <i className=\"fas fa-toolbox mr-2\"></i> Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // life cycle hooks\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.errors !== state.errors) {\r\n      return{\r\n          errors: props.errors,\r\n      }\r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"register\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.projectIdentifier}\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.description}\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n      case GET_PROJECT:\r\n          return{\r\n              ...state,\r\n              project: action.payload\r\n          }\r\n\r\n    case DELETE_PROJECT:\r\n        return{\r\n            ...state,\r\n            projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_taks: {}\r\n}\r\n\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_BACKLOG:\r\n            return{\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        \r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n\r\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: action.payload ? true : false,\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // componentWillReceiveProps(nextPros){\r\n  //   if(nextPros.errors){\r\n  //     this.setState({errors: nextPros.errors});\r\n  //   }\r\n  //   const {\r\n  //     id,\r\n  //     projectName,\r\n  //     projectIdentifier,\r\n  //     description,\r\n  //     start_date,\r\n  //     end_date,\r\n  //   } = nextPros.project;\r\n\r\n  //   this.setState({\r\n  //     id,\r\n  //     projectName,\r\n  //     projectIdentifier,\r\n  //     description,\r\n  //     start_date,\r\n  //     end_date,\r\n  //   });\r\n  // }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    //console.log(state);\r\n    if (props.errors) {\r\n      return { errors: props.errors };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //console.log(this.props);\r\n    await this.props.getProject(this.props.match.params.id, this.props.history);\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = this.props.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    //console.log(updatedProject);\r\n    this.props.createProject(updatedProject, this.props.history);\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    //console.log(this.state);\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h2 className=\"display-4 text-center\">Update Project form</h2>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <h4>Project Name</h4>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName || \"\"}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <h4>Project Identifier</h4>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier || \"\"}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <h4>Project Description</h4>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description || \"\"}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h4>Start Date</h4>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date || \"\"}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h4>Estimated End Date</h4>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date || \"\"}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick = (backlog_id, pt_id) => {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    else if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n            View / Update\r\n          </Link>\r\n\r\n          <button className=\"btn btn-danger ml-4\" onClick={()=>this.onDeleteClick(project_task.projectIdentifier, project_task.projectSequence)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n}\r\nexport default connect (null, {deleteProjectTask})(ProjectTask);","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\";\r\n\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try{\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data,\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, history, project_task) => async dispatch => {\r\n    try{\r\n        await axios.put(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch =>{\r\n    if(window.confirm(`Are you sure to delete ${pt_id}?`)){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      const status = tasks[i].props.project_task.status;\r\n      if (status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      } else if (status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  // construtor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state){\r\n      if(props.errors){\r\n          return{\r\n              errors: props.errors\r\n          }\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const {errors} = this.state;\r\n\r\n    //console.log(this.props);\r\n\r\n    let boardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      //console.log(project_tasks)\r\n        if(project_tasks.length === 0){\r\n            if(errors === null){\r\n                return(\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.message}\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div className=\"alert alert-info text-center\" role=\"alert\" >\r\n                        No Project Tasks on this Project\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else{\r\n            return <Backlog project_tasks_prop={project_tasks} />;\r\n        }\r\n    };\r\n\r\n    boardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n      <h1 className=\"display-4 text-center mb-4\"><i className=\"fas fa-tasks mr-3\"></i>Project Tasks for {id}</h1>\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps){\r\n  //   if(nextProps.errors){\r\n  //     this.setState({errors: nextProps.errors});\r\n  //   }\r\n  // }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.errors !== state.errors) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <Link to={`/projectBoard/${id}`} className=\"btn btn-dark ml-5\">\r\n            <i className=\"fas fa-hand-point-left mr-2\"></i>\r\n            Back to Project Board\r\n          </Link>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //   // if theres is error\r\n    //   if(Object.entries(this.props.errors).length !== 0 || this.props.errors.constructor !== Object){\r\n    //       this.props.history.push(\"/dashboard\");\r\n    //       return;\r\n    //   }\r\n    // console.log(Object.entries(this.props.errors).length !== 0);\r\n    // console.log(this.props.errors.constructor !== Object);\r\n\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props\r\n      .getProjectTask(backlog_id, pt_id, this.props.history)\r\n      .then(() => {\r\n                // if theres is error\r\n        if(Object.entries(this.props.errors).length !== 0 || this.props.errors.constructor !== Object){\r\n            return;\r\n        }\r\n        const {\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptanceCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          create_At\r\n        } = this.props.project_task;\r\n        this.setState({\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptanceCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          create_At\r\n        });\r\n       });\r\n  }\r\n\r\n  //   componentWillReceiveProps(nextProps) {\r\n  //       console.log(nextProps);\r\n  //     const {\r\n  //       id,\r\n  //       projectSequence,\r\n  //       summary,\r\n  //       acceptanceCriteria,\r\n  //       status,\r\n  //       priority,\r\n  //       dueDate,\r\n  //       projectIdentifier,\r\n  //       create_At\r\n  //     } = nextProps.project_task;\r\n\r\n  //     this.setState({\r\n  //       id,\r\n  //       projectSequence,\r\n  //       summary,\r\n  //       acceptanceCriteria,\r\n  //       status,\r\n  //       priority,\r\n  //       dueDate,\r\n  //       projectIdentifier,\r\n  //       create_At\r\n  //     });\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(props, state) {\r\n  //     console.log(props);\r\n  //     if (props.project_task !== undefined) {\r\n  //       const {\r\n  //         id,\r\n  //         projectSequence,\r\n  //         summary,\r\n  //         acceptanceCriteria,\r\n  //         status,\r\n  //         priority,\r\n  //         dueDate,\r\n  //         projectIdentifier,\r\n  //         create_At\r\n  //       } = props.project_task;\r\n\r\n  //       const newId = id === state.id ? state.id : id;\r\n\r\n  //       return {\r\n  //         id: id,\r\n  //         projectSequence: projectSequence,\r\n  //         summary: summary,\r\n  //         acceptanceCriteria: acceptanceCriteria,\r\n  //         status: status,\r\n  //         priority: priority,\r\n  //         dueDate: dueDate,\r\n  //         projectIdentifier: projectIdentifier,\r\n  //         create_At: create_At\r\n  //       };\r\n  //     }\r\n  //   }\r\n  static getDerivedStateFromProps(props, state) {\r\n      if(props.errors !== state.errors){\r\n          return {\r\n              errors: props.errors,\r\n          }\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n      errors: {}\r\n    };\r\n\r\n    //console.log(updatedProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      this.props.history,\r\n      updatedProjectTask\r\n    );\r\n  };\r\n\r\n  render() {\r\n      const {errors} = this.state;\r\n    //     // if theres is error\r\n    //   if(Object.entries(errors).length !== 0 || errors.constructor !== Object){\r\n    //       this.props.history.push(\"/dashboard\");\r\n    //       return;\r\n    //   }\r\n    //console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n      <Link\r\n      to={`/projectBoard/${this.state.projectIdentifier}`}\r\n      className=\"btn btn-dark ml-5\"\r\n    >\r\n    <i className=\"fas fa-hand-point-left mr-2\"></i>\r\n      Back to Project Board\r\n    </Link>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h2 className=\"display-4 text-center mb-4\">\r\n                Add /Update Project Task\r\n              </h2>\r\n\r\n              <h4>Task Name</h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                      errors.summary && (\r\n                          <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                      )\r\n                  }\r\n                </div>\r\n                <h4>Task Description</h4>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h4>Due Date</h4>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h4>Priority</h4>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <h4>Status</h4>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    if (props.security.validToken) {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n    if (props.errors) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <br/>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      message: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (JSON.stringify(props.errors) !== JSON.stringify(state.errors)) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ message: \"\" });\r\n    //console.log(this.state);\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    //console.log(this.props);\r\n    this.props.createNewUser(newUser).then(() => {\r\n     //console.log(Object.entries(this.props.errors).length);\r\n      if (Object.entries(this.props.errors).length === 0) {\r\n        this.setState({ message: \"Succuss! You can log in now!\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <br/>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.fullName && (\r\n                      <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.username && (\r\n                      <div className=\"invalid-feedback\">{errors.username}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.password && (\r\n                      <div className=\"invalid-feedback\">{errors.password}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.confirmPassword && (\r\n                      <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <p style={{ color: \"blue\" }}>{this.state.message}</p>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport Login from \"../../components/UserManagement/Login\";\r\nimport Register from \"../../components/UserManagement/Register\";\r\nimport \"./LandingStyle.css\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      icon: <i class=\"fas fa-sign-in-alt mr-2\"></i>,\r\n      isLoginActive: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    this.rightSide.classList.add(\"right\");\r\n  }\r\n\r\n  changeState() {\r\n    const { isLoginActive } = this.state;\r\n    if (isLoginActive) {\r\n      this.rightSide.classList.remove(\"right\");\r\n      this.rightSide.classList.add(\"left\");\r\n    } else {\r\n      this.rightSide.classList.remove(\"left\");\r\n      this.rightSide.classList.add(\"right\");\r\n    }\r\n\r\n    this.setState(prevState => ({ isLoginActive: !prevState.isLoginActive }));\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { isLoginActive } = this.state;\r\n    const current = isLoginActive ? \"Register\" : \"Login\";\r\n    const currentActive = isLoginActive ? \"Login\" : \"Register\";\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Project Manager</h1>\r\n                <p className=\"lead\">\r\n                  Let the learning journal begin\r\n                </p>\r\n                <br/>\r\n                <div className=\"login\">\r\n                  <div\r\n                    className=\"landing-container\"\r\n                    ref={ref => (this.containerRef = ref)}\r\n                  >\r\n                    {isLoginActive && (\r\n                      <Login\r\n                        history={this.props.history}\r\n                        containerRef={ref => (this.current = ref)}\r\n                      />\r\n                    )}\r\n                    {!isLoginActive && (\r\n                      <Register\r\n                        containerRef={ref => (this.current = ref)}\r\n                      />\r\n                    )}\r\n                    <br />\r\n                  </div>\r\n                  <LeftSide\r\n                    current={current}\r\n                    icon = {this.state.icon}\r\n                    containerRef={ref => (this.rightSide = ref)}\r\n                    currentActive={{ currentActive }}\r\n                    onClick={this.changeState.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const getIcon = () =>{\r\n//   if(this.state.isLoginActive){\r\n//     return <i class=\"fas fa-sign-in-alt mr-2\"></i>\r\n//   }\r\n//   else{\r\n//     return <i class=\"fas fa-user-plus mr-2\"></i>\r\n//   }\r\n// }\r\n\r\nconst LeftSide = props => {\r\n  const loginIcon = props.current === \"Login\" ? <i className=\"fas fa-sign-in-alt mr-2\"></i> : \"\";\r\n  const registerIcon = loginIcon === \"\" ? <i className=\"fas fa-user-plus ml-2\"></i> : \"\";\r\n  return (\r\n    <div\r\n      className=\"right-side\"\r\n      ref={props.containerRef}\r\n      onClick={props.onClick}\r\n    >\r\n      <div className=\"inner-container\">\r\n        <div className=\"text\">{loginIcon}{props.current}{registerIcon}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {createNewUser}) (Landing);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  //console.log(otherProps),\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport updateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTTokens\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nfunction setToken(){\n  const jwtToken = localStorage.getItem(\"jwtToken\");\n  console.log(jwtToken);\n  if (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded_jwtToken\n    })\n\n    const currentTime = Date.now()/1000;\n    //console.log(\"currentTime: \" + currentTime + \" exp: \" + decoded_jwtToken.exp);\n    if(decoded_jwtToken.exp < currentTime){\n      store.dispatch(logout());\n      window.location.href = \"/\";\n    }\n  }\n\n  console.log(\"end of set token\");\n\n\n}\n\n\nclass App extends Component {\n  render() {\n    setToken();\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            {\n              // private routes\n            }\n            <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={updateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker();\n"],"sourceRoot":""}